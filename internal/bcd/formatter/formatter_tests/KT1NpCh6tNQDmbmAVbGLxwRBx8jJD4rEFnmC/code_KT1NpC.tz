parameter (or :_entries (string %_Liq_entry_updateName) (or (address %_Liq_entry_updatePaymentAddress) (or (pair %_Liq_entry_updateTerms int (pair int mumav)) (unit %_Liq_entry_deleteRegistration))));
storage (pair :storage (map %recordsNP address (pair :recordNP (string %name) (address %payer))) (pair (map %recordsFM address (map int (pair :recordFM (int %fee) (mumav %minimum)))) (string %stamp)));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT { RENAME @name_slash_3 ;
                 { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                 SENDER @sender ;
                 { DIP { DUP @storage } ; SWAP } ;
                 CDR ;
                 { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                 CAR %recordsNP ;
                 { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } ;
                 CAR %recordsNP ;
                 { DIP { { DIP { { DIP { DUP @sender } ; SWAP } } ; SWAP } } ; SWAP } ;
                 GET ;
                 IF_NONE { { DIP { { DIP { DUP @sender } ; SWAP } } ; SWAP } ; PUSH string "" ; PAIR %name %payer } {} ;
                 RENAME @recordNP ;
                 CDR %payer ;
                 { DIP { { DIP { { DIP { { DIP { { DIP { DUP @name } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                 PAIR @newRecordNP %name %payer ;
                 { DIP { { DIP { { DIP { DUP @sender } ; SWAP } } ; SWAP } } ; SWAP } ;
                 DIP { SOME } ;
                 DIP { DIP { DIP { DIP { DROP ; DROP ; DROP } } } } ;
                 UPDATE ;
                 PAIR @storage %recordsNP ;
                 NIL operation ;
                 PAIR }
               { IF_LEFT { RENAME @payer_slash_10 ;
                           { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                           SENDER @sender ;
                           { DIP { DUP @storage } ; SWAP } ;
                           CDR ;
                           { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                           CAR %recordsNP ;
                           { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } ;
                           CAR %recordsNP ;
                           { DIP { { DIP { { DIP { DUP @sender } ; SWAP } } ; SWAP } } ; SWAP } ;
                           GET ;
                           IF_NONE { { DIP { { DIP { DUP @sender } ; SWAP } } ; SWAP } ; PUSH string "" ; PAIR %name %payer } {} ;
                           RENAME @recordNP ;
                           CAR %name ;
                           { DIP { { DIP { { DIP { { DIP { { DIP { DUP @payer } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           SWAP ;
                           PAIR @newRecordNP %name %payer ;
                           { DIP { { DIP { { DIP { DUP @sender } ; SWAP } } ; SWAP } } ; SWAP } ;
                           DIP { SOME } ;
                           DIP { DIP { DIP { DIP { DROP ; DROP ; DROP } } } } ;
                           UPDATE ;
                           PAIR @storage %recordsNP ;
                           NIL operation ;
                           PAIR }
                         { IF_LEFT { RENAME @_cycle_fee_minimum_slash_17 ;
                                     { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                                     SENDER @sender ;
                                     { DIP { DUP @storage } ; SWAP } ;
                                     DUP ;
                                     CAR %recordsNP ;
                                     SWAP ;
                                     CDR ;
                                     CDR %stamp ;
                                     { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     { CDR ; CAR %recordsFM } ;
                                     { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     { CDR ; CAR %recordsFM } ;
                                     { DIP { { DIP { { DIP { { DIP { DUP @sender } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     GET ;
                                     IF_NONE { PUSH (map int (pair :recordFM (int %fee) (mumav %minimum))) {} } {} ;
                                     RENAME @cycleToRecordFM ;
                                     { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     { CDR ; CDR @minimum } ;
                                     { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     { CDR ; CAR @fee } ;
                                     PAIR @recordFM %fee %minimum ;
                                     { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     CAR @cycle ;
                                     DIP { SOME } ;
                                     UPDATE @newCycleToRecordFM ;
                                     { DIP { { DIP { { DIP { { DIP { DUP @sender } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     DIP { SOME } ;
                                     DIP { DIP { DIP { DIP { DIP { DROP ; DROP ; DROP } } } } } ;
                                     UPDATE ;
                                     PAIR %recordsFM %stamp ;
                                     SWAP ;
                                     PAIR @storage %recordsNP ;
                                     NIL operation ;
                                     PAIR }
                                   { RENAME @__slash_28 ;
                                     { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                                     SENDER @sender ;
                                     { DIP { DUP @storage } ; SWAP } ;
                                     CDR ;
                                     { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                                     CAR %recordsNP ;
                                     { DIP { { DIP { DUP @sender } ; SWAP } } ; SWAP } ;
                                     DIP { NONE (pair :recordNP (string %name) (address %payer)) } ;
                                     UPDATE ;
                                     PAIR @storage %recordsNP ;
                                     DUP @storage ;
                                     DUP ;
                                     CAR %recordsNP ;
                                     SWAP ;
                                     CDR ;
                                     CDR %stamp ;
                                     { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                                     { CDR ; CAR %recordsFM } ;
                                     { DIP { { DIP { { DIP { { DIP { DUP @sender } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     DIP { NONE (map int (pair :recordFM (int %fee) (mumav %minimum))) } ;
                                     DIP { DIP { DIP { DIP { DIP { DROP ; DROP ; DROP ; DROP } } } } } ;
                                     UPDATE ;
                                     PAIR %recordsFM %stamp ;
                                     SWAP ;
                                     PAIR @storage %recordsNP ;
                                     NIL operation ;
                                     PAIR } } } ;
       DIP { DROP ; DROP } }
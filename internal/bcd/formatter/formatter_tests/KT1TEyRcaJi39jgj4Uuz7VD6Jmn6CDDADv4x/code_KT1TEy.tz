parameter (or :_entries (pair %_Liq_entry_createFile string key_hash) (unit %_Liq_entry_main));
storage (pair :storage (big_map address (set address)) unit);
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT { RENAME @_fileHash_manager_slash_3 ;
                 { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                 { DIP { DUP } ; SWAP } ;
                 CAR @fileHash ;
                 SENDER @userAddress ;
                 PUSH (set address) {} ;
                 PUSH (set address) {} ;
                 PAIR ;
                 { DIP { DUP @userAddress } ; SWAP } ;
                 PAIR ;
                 { DIP { { DIP { DUP @fileHash } ; SWAP } } ; SWAP } ;
                 PAIR ;
                 PUSH mumav 0 ;
                 PUSH bool True ;
                 PUSH bool True ;
                 NONE key_hash ;
                 { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                 CDR @manager ;
                 CREATE_CONTRACT { parameter (or :_entries (unit %_Liq_entry_main) (or (unit %_Liq_entry_sign) (or (address %_Liq_entry_addAccess) (address %_Liq_entry_removeAccess)))) ; storage (pair string (pair address (pair (set address) (set address)))) ; code { DUP ; DIP { CDR @storage_slash_1 } ; CAR @parameter_slash_2 ; DUP @parameter ; IF_LEFT { DROP ;
                           { DIP { DUP } ; SWAP } ;
                           NIL operation ;
                           PAIR }
                         { IF_LEFT { RENAME @__slash_5 ;
                                     { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                                     DUP ;
                                     { CDR ; CDR ; CAR @signs } ;
                                     { DIP { DUP } ; SWAP } ;
                                     { CDR ; CDR ; CDR @access } ;
                                     SENDER @userAddress ;
                                     { DIP { DUP @access } ; SWAP } ;
                                     { DIP { DUP @userAddress } ; SWAP } ;
                                     MEM ;
                                     NOT ;
                                     IF { PUSH string "Sign not alowed" ;
                                          FAILWITH }
                                        { UNIT } ;
                                     DROP ;
                                     { DIP { { DIP { DUP @signs } ; SWAP } } ; SWAP } ;
                                     { DIP { DUP @userAddress } ; SWAP } ;
                                     MEM ;
                                     IF { PUSH string "sign already exist" ;
                                          FAILWITH }
                                        { UNIT } ;
                                     DROP ;
                                     { DIP { DUP @access } ; SWAP } ;
                                     { DIP { { DIP { { DIP { DUP @signs } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     { DIP { { DIP { DUP @userAddress } ; SWAP } } ; SWAP } ;
                                     DIP { PUSH bool True } ;
                                     DIP { DIP { DIP { DIP { DROP ; DROP ; DROP } } } } ;
                                     DIP { DIP { DIP { DIP { DIP { DROP } } } } } ;
                                     UPDATE @signs ;
                                     PAIR ;
                                     { DIP { DUP } ; SWAP } ;
                                     { CDR ; CAR @owner } ;
                                     PAIR ;
                                     SWAP ;
                                     CAR @hash ;
                                     PAIR ;
                                     NIL operation ;
                                     PAIR }
                                   { IF_LEFT { RENAME @user_slash_14 ;
                                               { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                                               DUP ;
                                               { CDR ; CAR @owner } ;
                                               SENDER @userAddress ;
                                               { DIP { DUP @owner } ; SWAP } ;
                                               COMPARE ;
                                               NEQ ;
                                               IF { PUSH string "you not owner" ;
                                                    FAILWITH }
                                                  { UNIT } ;
                                               DROP ;
                                               { DIP { DUP } ; SWAP } ;
                                               { CDR ; CDR ; CDR @access } ;
                                               { DIP { { DIP { { DIP { DUP @user } ; SWAP } } ; SWAP } } ; SWAP } ;
                                               DIP { PUSH bool True } ;
                                               DIP { DIP { DIP { DIP { DIP { DROP } } } } } ;
                                               UPDATE @access ;
                                               { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
                                               { CDR ; CDR ; CAR @signs } ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               CAR @hash ;
                                               PAIR ;
                                               NIL operation ;
                                               PAIR }
                                             { RENAME @user_slash_23 ;
                                               { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                                               DUP ;
                                               { CDR ; CAR @owner } ;
                                               SENDER @userAddress ;
                                               { DIP { DUP @owner } ; SWAP } ;
                                               COMPARE ;
                                               NEQ ;
                                               IF { PUSH string "you not owner" ;
                                                    FAILWITH }
                                                  { UNIT } ;
                                               DROP ;
                                               { DIP { DUP } ; SWAP } ;
                                               { CDR ; CDR ; CDR @access } ;
                                               { DIP { { DIP { { DIP { DUP @user } ; SWAP } } ; SWAP } } ; SWAP } ;
                                               DIP { PUSH bool False } ;
                                               DIP { DIP { DIP { DIP { DIP { DROP } } } } } ;
                                               UPDATE @access ;
                                               { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
                                               { CDR ; CDR ; CAR @signs } ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               CAR @hash ;
                                               PAIR ;
                                               NIL operation ;
                                               PAIR } } } ; DIP { DROP ; DROP } } } ;
                 PAIR @_createContractOp_fileAddress ;
                 DUP ;
                 CDR @fileAddress ;
                 PUSH @fileStorage (contract :FilesStorage (pair string address)) "KT1Ki9hCRhWERgvVvXvVnFR3ruwM9sR5eLAN" ;
                 PUSH mumav 0 ;
                 { DIP { { DIP { DUP @fileAddress } ; SWAP } } ; SWAP } ;
                 { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @fileHash } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                 PAIR ;
                 TRANSFER_TOKENS @addContractToStorageOp ;
                 { DIP { { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                 CDR %nothing ;
                 { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                 CAR %userFiles ;
                 { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                 CAR %userFiles ;
                 { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @userAddress } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                 GET ;
                 IF_NONE { PUSH (set address) {} } {} ;
                 RENAME @userFiles ;
                 { DIP { { DIP { { DIP { { DIP { DUP @fileAddress } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                 DIP { PUSH bool True } ;
                 UPDATE @userFiles ;
                 { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @userAddress } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                 DIP { SOME } ;
                 DIP { DIP { DIP { DIP { DIP { DROP } } } } } ;
                 UPDATE @usersFiles ;
                 PAIR @storage %userFiles %nothing ;
                 NIL operation ;
                 { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
                 DIP { DIP { DIP { DROP } } } ;
                 DIP { DIP { DIP { DIP { DROP ; DROP ; DROP ; DROP } } } } ;
                 CONS ;
                 { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
                 DIP { DIP { DIP { DROP } } } ;
                 CAR @createContractOp ;
                 CONS ;
                 PAIR }
               { DROP ;
                 { DIP { DUP } ; SWAP } ;
                 NIL operation ;
                 PAIR } ;
       DIP { DROP ; DROP } }
parameter (pair string (pair int (pair mumav address)));
storage (pair :storage (string %stamp) (map %register address (pair :entry (string %name) (pair (int %fee) (pair (mumav %minimum) (address %payer))))));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @_name_fee_minimum_payer_slash_2 ;
       { DIP { DUP @storage } ; SWAP } ;
       CAR %stamp ;
       { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
       CDR %register ;
       { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
       { CDR ; CDR ; CDR @payer } ;
       { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } ;
       { CDR ; CDR ; CAR @minimum } ;
       PAIR %minimum %payer ;
       { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } ;
       { CDR ; CAR @fee } ;
       PAIR %fee ;
       { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } ;
       CAR @name ;
       PAIR @entry %name ;
       SENDER ;
       DIP { SOME } ;
       DIP { DIP { DIP { DIP { DROP ; DROP } } } } ;
       UPDATE ;
       SWAP ;
       PAIR @storage %stamp %register ;
       NIL operation ;
       PAIR }
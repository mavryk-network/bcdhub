parameter (or :_entries (pair :gig %createGig (address %verifier) (pair (key_hash %taskPerformer) (pair (mumav %bounty) (string %task)))) (or (key_hash %assignTaskPerformer) (address %releaseFunds)));
storage (map address (pair :gig (address %verifier) (pair (key_hash %taskPerformer) (pair (mumav %bounty) (string %task)))));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT { RENAME @_gig_slash_3 ;
                 DUP ;
                 { CDR ; CDR ; CAR %bounty } ;
                 AMOUNT @received ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "bounty amount does not match the bounty value" ;
                      FAILWITH }
                    { UNIT } ;
                 DROP ;
                 { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                 { DIP { DUP } ; SWAP } ;
                 { CDR ; CDR ; CDR %task } ;
                 { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
                 { CDR ; CDR ; CAR %bounty } ;
                 PAIR %bounty %task ;
                 { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
                 { CDR ; CAR %taskPerformer } ;
                 PAIR %taskPerformer ;
                 { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
                 CAR %verifier ;
                 PAIR @tempGig %verifier ;
                 SOURCE @addr ;
                 DIP { SOME } ;
                 DIP { DIP { DIP { DROP } } } ;
                 UPDATE @tempMap ;
                 NIL operation ;
                 PAIR }
               { IF_LEFT { RENAME @_taskPerformer_slash_9 ;
                           { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                           SOURCE @addr ;
                           { DIP { DUP @storage } ; SWAP } ;
                           { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                           { DIP { { DIP { DUP @addr } ; SWAP } } ; SWAP } ;
                           GET ;
                           IF_NONE { { DIP { DUP @addr } ; SWAP } ; PUSH string "No gig created by " ; PAIR ; FAILWITH } {} ;
                           RENAME @tempGig ;
                           DUP ;
                           CAR %verifier ;
                           SWAP ;
                           CDR ;
                           CDR ;
                           { DIP { { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           PAIR %taskPerformer ;
                           SWAP ;
                           PAIR @tempGig %verifier ;
                           { DIP { { DIP { DUP @addr } ; SWAP } } ; SWAP } ;
                           DIP { SOME } ;
                           DIP { DIP { DIP { DROP ; DROP ; DROP } } } ;
                           UPDATE @tempMap ;
                           NIL operation ;
                           PAIR }
                         { RENAME @gigPoster_slash_16 ;
                           { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                           DUP @storage ;
                           { DIP { { DIP { DUP @gigPoster } ; SWAP } } ; SWAP } ;
                           GET ;
                           IF_NONE { { DIP { DUP @gigPoster } ; SWAP } ; PUSH string "No gig created by " ; PAIR ; FAILWITH } {} ;
                           RENAME @tempGig ;
                           SOURCE @addr ;
                           { DIP { DUP @tempGig } ; SWAP } ;
                           CAR %verifier ;
                           { DIP { DUP @addr } ; SWAP } ;
                           COMPARE ;
                           NEQ ;
                           IF { PUSH string "only assigned verifier could release funds" ;
                                FAILWITH }
                              { UNIT } ;
                           DROP ;
                           { DIP { DUP @tempGig } ; SWAP } ;
                           { CDR ; CAR %taskPerformer } ;
                           IMPLICIT_ACCOUNT ;
                           { DIP { { DIP { DUP @tempGig } ; SWAP } } ; SWAP } ;
                           { CDR ; CDR ; CAR %bounty } ;
                           UNIT ;
                           TRANSFER_TOKENS @op ;
                           { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } ;
                           { DIP { { DIP { { DIP { DUP @tempGig } ; SWAP } } ; SWAP } } ; SWAP } ;
                           DUP ;
                           CAR %verifier ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           CAR %taskPerformer ;
                           SWAP ;
                           CDR ;
                           CDR %task ;
                           PUSH mumav 0 ;
                           PAIR %bounty %task ;
                           SWAP ;
                           PAIR %taskPerformer ;
                           SWAP ;
                           PAIR @tempGig %verifier ;
                           { DIP { { DIP { { DIP { DUP @addr } ; SWAP } } ; SWAP } } ; SWAP } ;
                           DIP { SOME } ;
                           DIP { DIP { DIP { DIP { DROP ; DROP ; DROP ; DROP } } } } ;
                           UPDATE @tempMap ;
                           NIL operation ;
                           { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
                           DIP { DIP { DIP { DROP } } } ;
                           CONS ;
                           PAIR } } ;
       DIP { DROP ; DROP } }
parameter (or :_entries (pair %_Liq_entry_registration key_hash (pair int (pair int nat))) (key_hash %_Liq_entry_claim));
storage (map key_hash (pair :account (pair %location int int) (pair (nat %windspeed) (mumav %premiumBalance))));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT { RENAME @_acc_long_lat_speed_slash_3 ;
                 { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                 { DIP { DUP } ; SWAP } ;
                 CAR @acc ;
                 AMOUNT @amount ;
                 PUSH mumav 5000000 ;
                 { DIP { DUP @amount } ; SWAP } ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "Premium should be more than 5 tz" ;
                      FAILWITH }
                    { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                      { DIP { { DIP { DUP @acc } ; SWAP } } ; SWAP } ;
                      GET ;
                      IF_NONE { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                                { DIP { DUP @amount } ; SWAP } ;
                                { DIP { { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                { CDR ; CDR ; CDR @speed } ;
                                PAIR %windspeed %premiumBalance ;
                                { DIP { { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                { CDR ; CDR ; CAR @lat } ;
                                { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                { CDR ; CAR @long } ;
                                PAIR ;
                                PAIR @x %location ;
                                { DIP { { DIP { { DIP { DUP @acc } ; SWAP } } ; SWAP } } ; SWAP } ;
                                DIP { SOME } ;
                                UPDATE @bigmap ;
                                NIL operation ;
                                PAIR }
                              { PUSH string "already registered" ;
                                FAILWITH } } ;
                 DIP { DROP ; DROP ; DROP ; DROP } }
               { RENAME @name_slash_13 ;
                 { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                 DUP @storage ;
                 { DIP { { DIP { DUP @name } ; SWAP } } ; SWAP } ;
                 GET ;
                 IF_NONE { PUSH string "not registered yet" ;
                           FAILWITH }
                         { PUSH nat 100 ;
                           { DIP { DUP @x } ; SWAP } ;
                           { CDR ; CAR %windspeed } ;
                           COMPARE ;
                           GT ;
                           PUSH nat 200 ;
                           { DIP { { DIP { DUP @x } ; SWAP } } ; SWAP } ;
                           { CDR ; CAR %windspeed } ;
                           COMPARE ;
                           LT ;
                           AND ;
                           IF { { DIP { DUP @storage } ; SWAP } ;
                                { DIP { { DIP { { DIP { DUP @name } ; SWAP } } ; SWAP } } ; SWAP } ;
                                DIP { NONE (pair :account (pair %location int int) (pair (nat %windspeed) (mumav %premiumBalance))) } ;
                                UPDATE @storage ;
                                NIL operation ;
                                { DIP { { DIP { { DIP { { DIP { DUP @name } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                IMPLICIT_ACCOUNT ;
                                { DIP { { DIP { { DIP { DUP @x } ; SWAP } } ; SWAP } } ; SWAP } ;
                                { CDR ; CDR @pay %premiumBalance } ;
                                UNIT ;
                                TRANSFER_TOKENS ;
                                CONS @ops ;
                                PAIR }
                              { PUSH string "windspeed is not fit for claim" ;
                                FAILWITH } ;
                           DIP { DROP } } ;
                 DIP { DROP ; DROP } } ;
       DIP { DROP ; DROP } }
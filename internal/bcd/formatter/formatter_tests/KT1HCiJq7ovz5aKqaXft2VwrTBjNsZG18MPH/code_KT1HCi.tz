parameter (or :_entries (pair %register address (pair address (pair bytes (pair string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameInfo (unit %RegularName) (or (list %PremiumName (or bytes bytes)) (pair %RestrictedName (list (or bytes bytes)) bytes))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee))))))))) (or (pair %deploy address (pair bytes (pair string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameInfo (unit %RegularName) (or (list %PremiumName (or bytes bytes)) (pair %RestrictedName (list (or bytes bytes)) bytes))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee)))))))) (or (pair %renew address (pair address (or :tTeznameType (unit %Regular) (or (unit %Premium) (bytes %Restricted))))) (pair %update (or :tIdx (unit %Dep) (or (unit %Reg) (or (unit %Rew) (or (unit %Nac) (unit %RtN))))) address))));
storage (pair :tGateStorage (address %scDeployer) (pair (address %scRegistrar) (pair (address %scRenew) (pair (address %scNameTypes) (pair (key_hash %sManager) (pair (address %sAdmin) (address %sRootName)))))));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       LAMBDA @castTezname unit (pair (lambda (pair address unit) (contract :TeznameSpec (or :_entries (bytes %hasChild) (or (bytes %noChild) (or (address %hasParent) (or (or :tTeznameType %levelCheck (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (or (unit %oneYr) (or (or :tTeznameType %pay (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (or (pair %updateSubnameRecord bytes (pair address (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))))) (or (pair %updateOwnership string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameType (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee)))))) (unit %renew))))))))))) unit) { RENAME @msg_slash_10 ; LAMBDA (pair address unit) (contract :TeznameSpec (or :_entries (bytes %hasChild) (or (bytes %noChild) (or (address %hasParent) (or (or :tTeznameType %levelCheck (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (or (unit %oneYr) (or (or :tTeznameType %pay (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (or (pair %updateSubnameRecord bytes (pair address (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))))) (or (pair %updateOwnership string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameType (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee)))))) (unit %renew)))))))))) { RENAME @addr__msg_slash_11 ; DUP ; CAR @addr_slash_12 ; CONTRACT (or :_entries (bytes %hasChild) (or (bytes %noChild) (or (address %hasParent) (or (or :tTeznameType %levelCheck (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (or (unit %oneYr) (or (or :tTeznameType %pay (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (or (pair %updateSubnameRecord bytes (pair address (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))))) (or (pair %updateOwnership string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameType (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee)))))) (unit %renew))))))))) ; IF_NONE { DUP ; CDR @msg_slash_10 ; FAILWITH } {} ; DIP { DROP } } ; PAIR } ;
       { DIP { DUP @parameter } ; SWAP } ;
       IF_LEFT { RENAME @__parentAddr__addr__hname__Dest__DestType__TeznameInfo__Fees_slash_35 ;
                 { DIP { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ; SWAP } ;
                 { DIP { DUP } ; SWAP } ;
                 { CDR ; CDR ; CAR @_hname } ;
                 { DIP { DIP { DUP } ; SWAP } ; SWAP } ;
                 { CDR ; CDR ; CDR ; CDR ; CDR ; CAR @_TeznameInfo } ;
                 PUSH string "[ERROR]register/0" ;
                 { DIP { DIP { DIP { DUP @s } ; SWAP } ; SWAP } ; SWAP } ;
                 PAIR ;
                 DUP @s_msg ;
                 CAR @s ;
                 { CDR ; CDR ; CDR ; CAR %scNameTypes } ;
                 CONTRACT (pair bytes (or :tTeznameInfo (unit %RegularName) (or (list %PremiumName (or bytes bytes)) (pair %RestrictedName (list (or bytes bytes)) bytes)))) ;
                 IF_NONE { DUP @s_msg ; CDR @msg ; FAILWITH } {} ;
                 DIP { DROP } ;
                 PUSH mumav 0 ;
                 { DIP { DIP { DUP } ; SWAP } ; SWAP } ;
                 { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                 PAIR ;
                 TRANSFER_TOKENS @op1 ;
                 PUSH string "[ERROR]register/1" ;
                 { DIP { DIP { DIP { DIP { DUP @s } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                 PAIR ;
                 DUP @s_msg ;
                 CAR @s ;
                 { CDR ; CAR %scRegistrar } ;
                 CONTRACT (or :_entries (pair %register address (pair address (pair bytes (pair string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameInfo (unit %RegularName) (or (list %PremiumName (or bytes bytes)) (pair %RestrictedName (list (or bytes bytes)) bytes))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee))))))))) (pair %deploy address (pair bytes (pair string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameInfo (unit %RegularName) (or (list %PremiumName (or bytes bytes)) (pair %RestrictedName (list (or bytes bytes)) bytes))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee))))))))) ;
                 IF_NONE { DUP @s_msg ; CDR @msg ; FAILWITH } {} ;
                 DIP { DROP } ;
                 AMOUNT @amount ;
                 { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                 { CDR ; CDR ; CDR ; CDR ; CDR ; CDR @_Fees } ;
                 { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                 PAIR ;
                 { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                 { CDR ; CDR ; CDR ; CDR ; CAR @_DestType } ;
                 PAIR ;
                 { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                 { CDR ; CDR ; CDR ; CAR @_Dest } ;
                 PAIR ;
                 { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                 PAIR ;
                 { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                 { CDR ; CAR @_addr } ;
                 PAIR ;
                 { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                 CAR @_parentAddr ;
                 PAIR ;
                 LEFT %register % (pair address (pair bytes (pair string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameInfo (unit %RegularName) (or (list %PremiumName (or bytes bytes)) (pair %RestrictedName (list (or bytes bytes)) bytes))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee)))))))) ;
                 TRANSFER_TOKENS @op2 ;
                 DROP ;
                 DIP { DROP ; DROP } ;
                 { DIP { DIP { DROP } } } ;
                 SWAP ;
                 NIL operation ;
                 { DIP { DIP { DUP } ; SWAP } ; SWAP } ;
                 { DIP { DIP { DIP { DROP } } } } ;
                 CONS ;
                 PAIR }
               { IF_LEFT { RENAME @__parentAddr__hname__Dest__DestType__TeznameInfo__Fees_slash_49 ;
                           { DIP { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ; SWAP } ;
                           { DIP { DUP } ; SWAP } ;
                           CAR @_parentAddr ;
                           { DIP { DIP { DUP } ; SWAP } ; SWAP } ;
                           { CDR ; CAR @_hname } ;
                           { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
                           { CDR ; CDR ; CAR @_Dest } ;
                           { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           { CDR ; CDR ; CDR ; CAR @_DestType } ;
                           { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           { CDR ; CDR ; CDR ; CDR ; CAR @_TeznameInfo } ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           { CDR ; CDR ; CDR ; CDR ; CDR @_Fees } ;
                           PUSH string "[ERROR]deploy/2" ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP @s } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           DUP @s_msg ;
                           CAR @s ;
                           { CDR ; CDR ; CDR ; CAR %scNameTypes } ;
                           CONTRACT (pair bytes (or :tTeznameInfo (unit %RegularName) (or (list %PremiumName (or bytes bytes)) (pair %RestrictedName (list (or bytes bytes)) bytes)))) ;
                           IF_NONE { DUP @s_msg ; CDR @msg ; FAILWITH } {} ;
                           DIP { DROP } ;
                           PUSH mumav 0 ;
                           { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           TRANSFER_TOKENS @op ;
                           PUSH string "[ERROR]deploy/0" ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP @s } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           DUP @s_msg ;
                           CAR @s ;
                           { CDR ; CAR %scRegistrar } ;
                           CONTRACT (or :_entries (pair %register address (pair address (pair bytes (pair string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameInfo (unit %RegularName) (or (list %PremiumName (or bytes bytes)) (pair %RestrictedName (list (or bytes bytes)) bytes))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee))))))))) (pair %deploy address (pair bytes (pair string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameInfo (unit %RegularName) (or (list %PremiumName (or bytes bytes)) (pair %RestrictedName (list (or bytes bytes)) bytes))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee))))))))) ;
                           IF_NONE { DUP @s_msg ; CDR @msg ; FAILWITH } {} ;
                           DIP { DROP } ;
                           AMOUNT @amount ;
                           { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
                           { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           RIGHT % %deploy (pair address (pair address (pair bytes (pair string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameInfo (unit %RegularName) (or (list %PremiumName (or bytes bytes)) (pair %RestrictedName (list (or bytes bytes)) bytes))) (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee))))))))) ;
                           TRANSFER_TOKENS @opDeployR ;
                           PUSH string "[ERROR]deploy/1" ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP @s } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           DUP @s_msg ;
                           CAR @s ;
                           CAR %scDeployer ;
                           CONTRACT (pair bytes (pair string (pair (or :tDestType (unit %Wallet) (or (unit %IP) (unit %URL))) (pair (or :tTeznameType (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (pair (pair :tFees (mumav %sRgNameFee) (pair (mumav %sPrNameFee) (mumav %sRtNameFee))) (pair key_hash address)))))) ;
                           IF_NONE { DUP @s_msg ; CDR @msg ; FAILWITH } {} ;
                           DIP { DROP } ;
                           PUSH mumav 0 ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP @s } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           { CDR ; CDR ; CDR ; CDR ; CAR %sManager } ;
                           PAIR ;
                           { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           DUP @i ;
                           IF_LEFT { DROP ;
                                     PUSH (or :tTeznameType (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (Left Unit) }
                                   { IF_LEFT { DROP ;
                                               PUSH (or :tTeznameType (unit %Regular) (or (unit %Premium) (bytes %Restricted))) (Right (Left Unit)) }
                                             { RENAME @___chsum_slash_6 ;
                                               CDR @chsum ;
                                               RIGHT % %Restricted unit ;
                                               RIGHT % %_ unit } } ;
                           DIP { DROP } ;
                           PAIR ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                           PAIR @param ;
                           TRANSFER_TOKENS @opDeployD ;
                           DROP ;
                           DROP ;
                           DIP { DROP ; DROP ; DROP ; DROP ; DROP ; DROP } ;
                           { DIP { DIP { DROP } } } ;
                           SWAP ;
                           NIL operation ;
                           { DIP { DIP { DUP } ; SWAP } ; SWAP } ;
                           { DIP { DIP { DIP { DROP } } } } ;
                           CONS ;
                           PAIR }
                         { IF_LEFT { RENAME @__parentAddr__addr__TeznameType_slash_66 ;
                                     { DIP { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ; SWAP } ;
                                     PUSH string "[ERROR]deploy/2" ;
                                     { DIP { DUP @s } ; SWAP } ;
                                     PAIR ;
                                     DUP @s_msg ;
                                     CAR @s ;
                                     { CDR ; CDR ; CAR %scRenew } ;
                                     CONTRACT (pair address (pair address (or :tTeznameType (unit %Regular) (or (unit %Premium) (bytes %Restricted))))) ;
                                     IF_NONE { DUP @s_msg ; CDR @msg ; FAILWITH } {} ;
                                     DIP { DROP } ;
                                     AMOUNT @amount ;
                                     { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
                                     { CDR ; CDR @_TeznameType } ;
                                     { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                                     { CDR ; CAR @_addr } ;
                                     PAIR ;
                                     { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                                     { DIP { DIP { DIP { DIP { DIP { DROP } } } } } } ;
                                     CAR @_parentAddr ;
                                     PAIR ;
                                     TRANSFER_TOKENS @op ;
                                     SWAP ;
                                     NIL operation ;
                                     { DIP { DIP { DUP } ; SWAP } ; SWAP } ;
                                     { DIP { DIP { DIP { DROP } } } } ;
                                     CONS ;
                                     PAIR }
                                   { RENAME @__idx__addr_slash_74 ;
                                     { DIP { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ; SWAP } ;
                                     { DIP { DUP } ; SWAP } ;
                                     CDR @_addr ;
                                     { DIP { DUP @s } ; SWAP } ;
                                     { CDR ; CDR ; CDR ; CDR ; CDR ; CAR %sAdmin } ;
                                     SENDER ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { PUSH string "[ERROR]updateAddr" ;
                                          FAILWITH }
                                        { UNIT } ;
                                     DROP ;
                                     { DIP { DIP { DUP } ; SWAP } ; SWAP } ;
                                     CAR @_idx ;
                                     IF_LEFT { DROP ;
                                               { DIP { DUP @s } ; SWAP } ;
                                               CDR ;
                                               { DIP { DUP } ; SWAP } ;
                                               PAIR %scDeployer }
                                             { IF_LEFT { DROP ;
                                                         { DIP { DUP @s } ; SWAP } ;
                                                         DUP ;
                                                         CAR %scDeployer ;
                                                         SWAP ;
                                                         CDR ;
                                                         CDR ;
                                                         { DIP { DIP { DUP } ; SWAP } ; SWAP } ;
                                                         PAIR %scRegistrar ;
                                                         SWAP ;
                                                         PAIR %scDeployer }
                                                       { IF_LEFT { DROP ;
                                                                   { DIP { DUP @s } ; SWAP } ;
                                                                   DUP ;
                                                                   CAR %scDeployer ;
                                                                   SWAP ;
                                                                   CDR ;
                                                                   DUP ;
                                                                   CAR %scRegistrar ;
                                                                   SWAP ;
                                                                   CDR ;
                                                                   CDR ;
                                                                   { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
                                                                   PAIR %scRenew ;
                                                                   SWAP ;
                                                                   PAIR %scRegistrar ;
                                                                   SWAP ;
                                                                   PAIR %scDeployer }
                                                                 { IF_LEFT { DROP ;
                                                                             { DIP { DUP @s } ; SWAP } ;
                                                                             DUP ;
                                                                             CAR %scDeployer ;
                                                                             SWAP ;
                                                                             CDR ;
                                                                             DUP ;
                                                                             CAR %scRegistrar ;
                                                                             SWAP ;
                                                                             CDR ;
                                                                             DUP ;
                                                                             CAR %scRenew ;
                                                                             SWAP ;
                                                                             CDR ;
                                                                             CDR ;
                                                                             { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                                                                             PAIR %scNameTypes ;
                                                                             SWAP ;
                                                                             PAIR %scRenew ;
                                                                             SWAP ;
                                                                             PAIR %scRegistrar ;
                                                                             SWAP ;
                                                                             PAIR %scDeployer }
                                                                           { DROP ;
                                                                             { DIP { DUP @s } ; SWAP } ;
                                                                             DUP ;
                                                                             CAR %scDeployer ;
                                                                             SWAP ;
                                                                             CDR ;
                                                                             DUP ;
                                                                             CAR %scRegistrar ;
                                                                             SWAP ;
                                                                             CDR ;
                                                                             DUP ;
                                                                             CAR %scRenew ;
                                                                             SWAP ;
                                                                             CDR ;
                                                                             DUP ;
                                                                             CAR %scNameTypes ;
                                                                             SWAP ;
                                                                             CDR ;
                                                                             DUP ;
                                                                             CAR %sManager ;
                                                                             SWAP ;
                                                                             CDR ;
                                                                             CAR %sAdmin ;
                                                                             { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                                                                             SWAP ;
                                                                             PAIR %sAdmin %sRootName ;
                                                                             SWAP ;
                                                                             PAIR %sManager ;
                                                                             SWAP ;
                                                                             PAIR %scNameTypes ;
                                                                             SWAP ;
                                                                             PAIR %scRenew ;
                                                                             SWAP ;
                                                                             PAIR %scRegistrar ;
                                                                             SWAP ;
                                                                             PAIR %scDeployer } } } } ;
                                     DIP { DROP ; DROP ; DROP } ;
                                     RENAME @s ;
                                     NIL operation ;
                                     PAIR } } } ;
       DIP { DROP ; DROP ; DROP } }
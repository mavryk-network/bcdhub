parameter (or :_entries (pair %_Liq_entry_main mumav (pair nat nat)) (or (nat %_Liq_entry_updateValue) (address %_Liq_entry_setAdder)));
storage (pair :storage (address %adder) (nat %value));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT { RENAME @_to_forward_add_slash_3 ;
                 { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                 DUP @storage ;
                 CAR %adder ;
                 CONTRACT (pair nat nat) ;
                 IF_NONE { DUP @storage ; CAR %adder ; PUSH string "No adder contract found at" ; PAIR ; FAILWITH } {} ;
                 RENAME @dest ;
                 { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
                 CAR @to_forward ;
                 { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } ;
                 DIP { DIP { DIP { DIP { DROP } } } } ;
                 CDR @add ;
                 TRANSFER_TOKENS @op ;
                 SWAP ;
                 NIL operation ;
                 { DIP { { DIP { DUP } ; SWAP } } ; SWAP } ;
                 DIP { DIP { DIP { DROP } } } ;
                 CONS ;
                 PAIR }
               { IF_LEFT { RENAME @value_slash_10 ;
                           { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                           CAR %adder ;
                           PAIR @storage %adder %value ;
                           NIL operation ;
                           PAIR }
                         { RENAME @a_slash_13 ;
                           { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                           CDR %value ;
                           SWAP ;
                           PAIR @storage %adder %value ;
                           NIL operation ;
                           PAIR } } ;
       DIP { DROP ; DROP } }